1、进行一次测试后，需要运行clean.sh将上次的nsys-rep和sqlite文件删除，再进行下一个tensor_size的测试

2、有时候某个device可能没有全部6个operator的结果，那是因为此次运行overlap=false时，恰好在该device上只运行了这几个kernel，具体可查看nsys-rep文件。遇到这种情况，重新跑一次/几次overlap=false的情况，再运行sqlite-process.py即可

3、获取memcpy的slowdown时，应该将config.json中的"operation"处指定为"memcpy"（而不是"all"），其slowdown获取方法与其他operator-wise测试的slowdown获取方法基本相同，但需使用analyse-memcpy.py进行数据分析。得到的结果是./res目录下的一个excel文件，记录了不同device下memcpy操作的平均slowdown。其计算方法是先从无overlap情况的sqlite文件中计算出duration的平均值作为ground_truth,再使用公式计算出有overlap情况下每一个memcpy操作的slowdown，最后将这些slowdown进行平均。